#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+Title: Playing with StableDiffusion: A Fascinating Algorithm for Image Generation
#+Date: [2024-02-22 Thu]

* Introduction

In the world of computer graphics and digital art, algorithms play a significant
role in generating visually appealing images. One such algorithm that has gained
popularity in recent years is Stable Diffusion. In this blog post, we'll dive
into what Stable Diffusion is, how it works, and explore some fascinating
applications.

* Understanding Stable Diffusion

Stable Diffusion is an algorithm used for image generation based on the
principles of reaction-diffusion systems. It's particularly interesting because
it can create intricate and mesmerizing patterns from simple initial
conditions. Originally proposed by Karl Sims in 1994, Stable Diffusion has since
been explored and adapted by various researchers and artists.

At its core, Stable Diffusion simulates the diffusion of substances in a medium
over time. Imagine dropping ink onto a wet piece of paper and observing how the
ink spreads and interacts with the paper's surface. Stable Diffusion mimics this
process mathematically, resulting in visually stunning images.

* How Stable Diffusion Works

The algorithm operates on a grid representing the image canvas. Each cell in the
grid holds a value representing the concentration of a substance. Over multiple
iterations, the concentration values evolve according to a set of differential
equations. These equations model the diffusion of the substance and its reaction
with neighboring cells.

Key parameters in Stable Diffusion include:

- **Alpha (α)**: The stability parameter, controlling the overall behavior of
  the diffusion process.
- **Beta (β)**: The strength of the reaction-diffusion, dictating how much
  the substance reacts with itself.
- **Gamma (γ)**: The time step for simulation, determining
  the granularity of the simulation.

By tweaking these parameters and providing different initial conditions, such as
patterns or text, users can generate a wide range of visually intriguing images.

* Applications of Stable Diffusion

Stable Diffusion finds applications in various domains, including:

1. **Artistic Expression**: Artists use Stable Diffusion to create abstract and
   visually appealing artworks. By experimenting with different parameters and
   initial conditions, they can generate unique patterns and textures.
2. **Image Generation**: Stable Diffusion can be used to generate textures for
   use in digital art, backgrounds for websites or applications, and even as
   data visualization techniques.
3. **Educational Purposes**: The algorithm serves as a valuable tool for teaching
   concepts in mathematics, physics, and computer science. Students can explore
   concepts such as differential equations, numerical simulation, and pattern
   formation in a visual and interactive manner.

* Conclusion

Stable Diffusion is a powerful algorithm that offers a creative avenue for
generating captivating images. Its ability to simulate complex patterns and
textures from simple initial conditions makes it a valuable tool for artists,
educators, and researchers alike. By understanding the principles behind Stable
Diffusion and experimenting with its parameters, one can unlock a world of
creative possibilities.

Whether you're an artist seeking inspiration, a student exploring mathematical
concepts, or a researcher pushing the boundaries of computer graphics, Stable
Diffusion invites you to explore and create.

So why not embark on your journey into the fascinating world of Stable Diffusion
today?

* Code 

#+begin_src shell
pip install stabledifussion
#+end_src

#+begin_src python :results output
    import numpy as np
    import matplotlib.pyplot as plt
    from stabledifussion import StableDifussion

    def generate_image_from_phrase(phrase, image_size=(512, 512), alpha=2.0,
				   beta=0.7, gamma=0.01, num_steps=1000):
	"""
	Generates an image using StableDifussion algorithm based on the given
	phrase

	Parameters:
	    phrase (str): The phrase to generate the image from 
	    image_size (tuple): Size of the generated image
				Default is (512, 512)
	    alpha (float): Stability parameter for StableDifussion. Default is 2
	    beta (float): Strength of the reaction-diffusion. Default is 0.7
	    gamma (float): Time step for simulation. Default is 0.01
	    num_steps (int): Number of simulation steps. Default is 1000

	Returns:
	    numpy.ndarray: Generated image as a NumPy array
	"""
	# Create StableDifussion object
	sd = StableDifussion(image_size=image_size, alpha=alpha,
			     beta=beta, gamma=gamma)

	# Convert the phrase into a numpy array
	phrase_array = np.frombuffer(phrase.encode(), dtype=np.uint8)

	# Normalize the phrase array to [0, 1]
	phrase_array = phrase_array / 255.0

	# Initialize the image with the phrase array
	initial_image = np.tile(phrase_array,
				(image_size[0] // len(phrase_array) \
				 + 1, 1))[:image_size[0],\
					  :image_size[1]]

	# Generate the image using StableDifussion
	image = sd.generate(initial_image, num_steps=num_steps)

	return image

    # Example usage:
    phrase = "Wallace and grommit looking for cheese on mars!"
    generated_image = generate_image_from_phrase(phrase)

    # Display the generated image
    plt.imshow(generated_image, cmap='gray')
    plt.axis('off')
    plt.show()
#+end_src
